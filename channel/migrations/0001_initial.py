# Generated by Django 4.2 on 2024-11-01 02:32

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_art', models.ImageField(default='images/channel-art.jpg', upload_to=core.models.user_derectory_path)),
                ('image', models.ImageField(default='images/user-image.png', upload_to=core.models.user_derectory_path)),
                ('full_name', models.CharField(max_length=100)),
                ('channel_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Disabled', 'Disabled')], default='Active', max_length=100)),
                ('verified', models.BooleanField(default=False)),
                ('total_view', models.PositiveIntegerField(default=0)),
                ('business_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('make_business_email_public', models.BooleanField(default=False)),
                ('business_location', models.CharField(blank=True, max_length=100, null=True)),
                ('make_business_location_public', models.BooleanField(default=False)),
                ('website', models.URLField(default='https://www.udemy.com/home')),
                ('instagram', models.URLField(default='https://www.udemy.com/home')),
                ('facebook', models.URLField(default='https://www.udemy.com/home')),
                ('twitter', models.URLField(default='https://www.udemy.com/home')),
                ('keyword', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('subscibers', models.ManyToManyField(blank=True, related_name='user_subs', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='channel', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.models.user_derectory_path)),
                ('content', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Disabled', 'Disabled')], default='Active', max_length=100)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channel.channel')),
                ('likes', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Community',
                'verbose_name_plural': 'Community Posts',
            },
        ),
        migrations.CreateModel(
            name='CommunityComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='channel.community')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Community Comments',
                'verbose_name_plural': 'Community Comments',
            },
        ),
    ]
